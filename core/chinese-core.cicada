(* Here 这个名词 还是必须使用英文版本的 *)
夫 单元大小 Cell-width 者 也
夫 假 False 者 也
夫 真 True  者 也
夫 加       add      已矣 者 动词也
夫 减       sub      已矣 者 动词也
夫 乘       mul      已矣 者 动词也
夫 除       div      已矣 者 动词也
夫 模       mod      已矣 者 动词也
夫 除模     divmod   已矣 者 动词也
夫 模除     moddiv   已矣 者 动词也
夫 负       negate   已矣 者 动词也
夫 幂       power    已矣 者 动词也
(* 一般的 存取 所作用于 的是 一单元 大小 的存储空间
 * 小的 存取 所作用于 的是 一字节 大小 的存储空间
 *)

(* 多个值 而 存取 的作用 如下
 *   在存储空间中 :
 *     ||  1 : 值-1  ||
 *     ||  1 : 值-2  ||
 *     ||  1 : 值-3  ||
 *     ...
 *   在栈中 :
 *     (* 值-1, 值-2, 值-3, ... *)
 * 即 从上到下 对应 从左到右
 * 这样就和 名词 的结构保持了一致
 * 此时 取 很简单 但是 存 需要特殊处理
 *)

夫 存         save              已矣 者 动词也
夫 小存       save-byte         已矣 者 动词也
夫 而存       n-save            已矣 者 动词也
夫 而小存     n-save-byte       已矣 者 动词也


夫 取         fetch             已矣 者 动词也
夫 小取       fetch-byte        已矣 者 动词也
夫 而取       n-fetch           已矣 者 动词也
夫 而小取     n-fetch-byte      已矣 者 动词也


夫 加存       add-save          已矣 者 动词也
夫 减存       sub-save          已矣 者 动词也

夫 复制字节串 copy-byte-string  已矣 者 动词也
夫 做自引用值于参数栈
   make-self-reference-value,in-argument-stack
   已矣
者 动词也

夫 取参数栈指针
   fetch-argument-stack-pointer
   已矣
者 动词也

夫 重置参数栈指针
   reset-argument-stack-pointer
   已矣
者 动词也
夫 弃     drop      已矣 者 动词也
夫 而弃   n-drop    已矣 者 动词也
夫 复     dup       已矣 者 动词也
夫 而复   n-dup     已矣 者 动词也
夫 跃       over       已矣 者 动词也
夫 而跃     x-y-over   已矣 者 动词也
夫 藏       tuck       已矣 者 动词也
夫 而藏     x-y-tuck   已矣 者 动词也
夫 换       swap       已矣 者 动词也
夫 而换     x-y-swap   已矣 者 动词也
夫 比特串相等    equal-string?            已矣 者 动词也
夫 比特串之首    head-of-string           已矣 者 动词也
夫 比特串之尾    tail-of-string           已矣 者 动词也
夫 比特串之首尾  tail-and-head-of-string  已矣 者 动词也
夫 真乎       true?   已矣 者 动词也
夫 假乎       false?  已矣 者 动词也
夫 相等       ==       已矣 者 动词也
夫 不等       =/=      已矣 者 动词也

夫 小于       <        已矣 者 动词也
夫 不大于     <=       已矣 者 动词也

夫 大于       >        已矣 者 动词也
夫 不小于     >=       已矣 者 动词也

夫 零乎       zero?    已矣 者 动词也
夫 一乎       one?     已矣 者 动词也
夫 执行       execute     已矣 者 动词也
夫 词->大小
   (* 词的链接[地址] -- 大小 *)
   单元大小 -2 乘 加 取
   已矣
者 动词也

夫 词->大小之地址
   (* 词的链接[地址] -- 大小之地址 *)
   单元大小 -2 乘 加
   已矣
者 动词也

夫 词->标识
   (* 词的链接[地址] -- 既是值又是地址 *)
   单元大小 -1 乘 加
   已矣
者 动词也

夫 词->类型
   (* 词的链接[地址] -- 类型 *)
   单元大小 加 取
   已矣
者 动词也

夫 词->类型之地址
   (* 词的链接[地址] -- 类型之地址 *)
   单元大小 加
   已矣
者 动词也

夫 词->名字
   (* 词的链接[地址] -- 比特串[地址, 长度] *)
   单元大小 2 乘 加
   取 复
   单元大小 加 (* 地址 *)
   换 取 (* 长度 *)
   已矣
者 动词也

夫 词->诠释者
   (* 词的链接[地址] -- 诠释者[地址] *)
   单元大小 3 乘 加
   已矣
者 动词也

夫 词->定义
   (* 词的链接[地址] -- 定义[地址] *)
   单元大小 4 乘 加
   已矣
者 动词也
ok
夫 助,查词典
   (* 词串[地址, 长度], 词之链接[地址] --
      词之链接[地址] 或 0 *)
   复 零乎 则
      弃 2 而弃
      0 已矣
   再
   push-lambda-stack
   词->名字 2 2 而跃 比特串相等 则
      2 而弃
      pop-lambda-stack
      已矣
   再
   pop-lambda-stack
   助,查词典
   已矣
者 动词也

ok
夫 查词典
   (* 词串[地址, 长度] --
      词之链接[地址] 或 0 *)
   First-word-in-dictionary
   助,查词典
   已矣
者 动词也
ok
ok
